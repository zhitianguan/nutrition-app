{"version":3,"sources":["components/Suggestion.js","components/FoodItem.js","components/FoodList.js","components/Search.js","components/NutrientTotals.js","components/AddedFoodItem.js","components/AddedFoods.js","App.js","index.js"],"names":["suggestion","onSuggestionClick","ListItem","style","width","onClick","ListItemText","primary","food","addFood","classes","makeStyles","details","icon","verticalAlign","color","marginBottom","useStyles","Grid","item","xs","Card","display","justifyContent","alignItems","CardContent","className","Typography","gutterBottom","variant","component","name","calories","IconButton","aria-label","typing","searchTerm","undefined","length","container","maxWidth","spacing","FoodItem","key","id","SearchBarWrapper","props","handleChange","newValue","setState","state","autocompleteFood","handleSubmit","onFormSubmit","term","a","axios","get","then","res","suggestions","data","catch","err","console","log","toString","replace","this","options","map","index","Suggestion","Divider","value","onChange","onRequestSearch","onCancelSearch","List","FoodList","React","Component","addedFoods","totalCal","totalProtein","totalCarbs","totalFats","totalSaturated","totalChole","totalSodium","totalFibre","reduce","totalNutrients","PROCNT","quantity","CHOCDF","FAT","FASAT","CHOLE","NA","FIBTG","backgroundColor","noWrap","toFixed","removeFood","secondary","ListItemSecondaryAction","edge","list","height","marginTop","listOfAddedFoods","AddedFoodItem","maxHeight","overflow","App","searchFood","url2","result","newFood","parsed","post","measure","uri","foodId","label","newFoods","push","splice","Search","AddedFoods","position","bottom","NutrientTotals","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.57e0465e.chunk.js","sourcesContent":["import React from 'react';\nimport { Grid, ListItem, ListItemText, Divider} from '@material-ui/core';\n\nexport default ({ suggestion, onSuggestionClick }) => {\n\n\treturn (\n\t\t<ListItem style={{width:\"30vw\"}} onClick={()=>onSuggestionClick(suggestion)}>\n\t\t\t<ListItemText primary={suggestion}/>\n\t\t</ListItem>\n\t\n\t);\n};\n","import React from \"react\";\nimport { Grid, Button, IconButton, makeStyles, Typography,Card, CardMedia, CardActionArea, CardContent} from \"@material-ui/core\";\nimport AddCircleSharp from '@material-ui/icons/AddCircleSharp';\n\nexport default ({food, addFood}) => {\n\n\n  const useStyles = makeStyles({\n    details: {\n      width: \"50%\"\n    },\n    icon: {\n      verticalAlign:\"middle\",\n      color: \"green\",\n      marginBottom: \"0\",\n    },\n  });\n  const classes = useStyles();\n\n  return (\n    <Grid item xs={12}>\n    <Card style={{display:\"flex\", justifyContent:\"space-between\", alignItems: \"center\"}}>\n\n          <CardContent className={classes.details}>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {food.name}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {` ${food.calories} calories`}\n              </Typography>\n          </CardContent>\n          <IconButton aria-label=\"delete\" onClick={()=>{addFood(food)}}>\n                      <AddCircleSharp/>\n          </IconButton>\n         \n        \n        \n      \n    </Card>\n  </Grid>\n\n\n    \n  );\n}\n\n\n/*<IconButton edge=\"end\" aria-label=\"delete\" onClick={() => addFood(food)}>\n            <AddCircleSharp className={classes.icon}/>\n        </IconButton>*/\n\n\n\n\n\n/*  \n<Grid item>\n                  <Card>\n                      <CardMedia \n                        className={classes.media}\n                        image={selectedPodcast.artworkUrl600}\n                        title={selectedPodcast.collectionName}\n                      />\n                  </Card>\n            </Grid>\n\n\n            <Grid item container  xs={4} justify=\"center\" direction ='column'>\n                <Grid item>\n                  <Typography variant=\"h4\">\n                    {selectedPodcast.collectionName}\n                  </Typography>\n                </Grid>\n                <Grid item style={{ marginTop: \"15px\" }}>\n                  <Typography variant=\"subtitle1\">\n                    by {selectedPodcast.artistName}\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  <Typography variant=\"subtitle1\">\n                    Genre: {selectedPodcast.primaryGenreName}\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  <FormControlLabel \n                    control={<Switch checked={subscribed} onChange = {()=>{toggleSubscription(!subscribed, selectedPodcast)}}/>} \n                    label=\"Subscribe\" \n                    style={{ marginTop: \"15px\" }}\n                  />\n                </Grid>\n            </Grid>\n            <Grid item xs={12} style={{margin:\"-10px\"}}>\n            </Grid>     */","import React from 'react';\nimport { Grid, Divider} from '@material-ui/core';\n\nimport FoodItem from './FoodItem';\n\nexport default ({ food, typing, addFood, searchTerm }) => {\n\n\tif (searchTerm === '') {\n\t\treturn (\n\t\t\t<h2>\n\t\t\t\tType out a food item to add!\n\t\t\t</h2>\n\t\t);\n\t}\n\telse if (food === undefined || typing){\n\t\treturn null\n\t}\n\telse if (food.length < 1) {\n\t\treturn (\n\t\t\t\t<h2>\n\t\t\t\t\tCouldn't find a food item with that name\n\t\t\t\t</h2>\n\t\t);\n    }\n\n\treturn (\n\t\t<Grid item container \n\t\t\tstyle={{justifyContent:'center',maxWidth:\"750px\"}}\n\t\t\tspacing={1}\n\t\t>\n\t\t\t\t<FoodItem\n                addFood={addFood}\n                key={food.id}\n                food={food}\n            />\n\t\t\t\n\t\t</Grid>\n\t\n\t);\n};\n","import React from 'react'\nimport SearchBar from \"material-ui-search-bar\";\nimport {Divider, List, Grid} from '@material-ui/core';\nimport Suggestion from './Suggestion';\nimport FoodList from './FoodList'\nimport axios from 'axios'\n\nclass SearchBarWrapper extends React.Component {\n    constructor (props){\n        super(props)\n        this.state = {\n            searchTerm: '',\n            suggestions: [], \n            typing: false\n        }\n    }\n\n    //handlers that update the input in state once input is added\n    handleChange = (newValue) => {\n        this.setState({\n            searchTerm: newValue,\n            typing: this.state.searchTerm!==''\n        })\n        \n        this.autocompleteFood (newValue)\n    }\n\n    handleSubmit = () => {\n        const {searchTerm} = this.state\n        const {onFormSubmit} = this.props\n        this.setState ({\n            typing: false\n          })\n        onFormSubmit (searchTerm)\n    }\n\n    autocompleteFood = async (term) => {\n        if (term.length>0){\n          const id = \"a8ca87da\"\n          const key = \"234285a1a06cedc063e96ce6c802fb9e\"\n          //const cors = 'https://cors-anywhere.herokuapp.com/'\n\n          axios.get(`https://api.edamam.com/auto-complete?q=${term}&limit=5&app_id=${id}&app_key=${key}`)\n            .then(res=>{\n                this.setState ({\n                    suggestions: res.data\n                    })\n            })\n            .catch(err=>{\n                console.log('autocorrect error')\n            })\n          \n        }\n      }\n\n    onSuggestionClick = (newValue) => {\n    //term = term.toString().replace(/[^a-zA-Z0-9]/g, ' ');\n        newValue= newValue.toString().replace(/[^a-zA-Z0-9]/g, ' ');\n        this.setState({\n            searchTerm: newValue,\n            suggestions: []\n        })\n        console.log(newValue)\n        const {onFormSubmit} = this.props\n        this.setState ({\n            typing: false\n        })\n        onFormSubmit (newValue)\n    }    \n\n    \n\n    render () {\n        const {suggestions, searchTerm, typing} = this.state\n        const {food, addFood} = this.props\n\n        const options = typing?suggestions.map((suggestion, index) => {\n            return (\n              <>\n                    <Suggestion\n                        suggestion={suggestion}\n                        onSuggestionClick={this.onSuggestionClick}\n                    />\n                    {(index!==suggestions.length-1)&&<Divider/>}\n              </>\n            )\n        }):null\n        return (\n            <>\n            <SearchBar\n                value={this.state.searchTerm}\n                onChange={this.handleChange}\n                onRequestSearch={this.handleSubmit}\n                onCancelSearch={()=>{\n                    this.setState({\n                        searchTerm: ''\n                    })\n                }}\n            />\n            <List>\n                {options}\n            </List>\n            <FoodList food={food} addFood={addFood} typing={typing} searchTerm={searchTerm}/>\n            </>\n            \n            )\n        }\n    }\n    \n    export default SearchBarWrapper\n    \n    //<Suggestions foodSuggestions={this.props.foodSuggestions} onSelectFood={searchFood()}/>","import React from \"react\";\nimport { Grid, Typography,Card, CardContent} from \"@material-ui/core\";\n\nexport default ({addedFoods}) => {\n  let totalCal = 0\n  let totalProtein = 0\n  let totalCarbs = 0\n  let totalFats = 0\n  let totalSaturated = 0\n  let totalChole = 0\n  let totalSodium = 0\n  let totalFibre = 0\n\n  console.log(addedFoods)\n  if (addedFoods.length >= 1){\n    totalCal=addedFoods.reduce((totalCal, food)=>{ return totalCal + food.calories},0)\n    totalProtein=addedFoods.reduce((totalProtein, food)=>{\n      return totalProtein + (('PROCNT' in food.totalNutrients)?food.totalNutrients.PROCNT.quantity:0)\n    },0)  \n    totalCarbs=addedFoods.reduce((totalCarbs, food)=>{return totalCarbs + (('CHOCDF' in food.totalNutrients)?food.totalNutrients.CHOCDF.quantity:0)},0)\n    totalFats=addedFoods.reduce((totalFats, food)=>{return totalFats + (('FAT' in food.totalNutrients)?food.totalNutrients.FAT.quantity:0)},0)\n    totalSaturated=addedFoods.reduce((totalSaturated, food)=>{return totalSaturated + (('FASAT' in food.totalNutrients)?food.totalNutrients.FASAT.quantity:0)},0)\n    totalChole=addedFoods.reduce((totalChole, food)=>{return totalChole + (('CHOLE' in food.totalNutrients)?food.totalNutrients.CHOLE.quantity:0)},0)\n    totalSodium=addedFoods.reduce((totalSodium, food)=>{return totalSodium + (('NA' in food.totalNutrients)?food.totalNutrients.NA.quantity:0)},0)\n    totalFibre=addedFoods.reduce((totalFibre, food)=>{return totalFibre + (('FIBTG' in food.totalNutrients)?food.totalNutrients.FIBTG.quantity:0)},0)\n  }\n\n  return (\n      <Card style={{backgroundColor: \"#B8D8BE\"}}>\n          <CardContent>   \n            <Typography variant=\"h5\" noWrap>\n              Totals\n            </Typography>\n\n          <Grid container style={{justifyContent:\"left\"}} spacing={2}>\n            <Grid item xs={3}> \n              <Typography variant=\"subtitle1\">\n                Calories: \n              </Typography>\n              <Typography variant=\"h5\">\n                {+totalCal.toFixed(3)}\n              </Typography>\n            </Grid>\n            <Grid item xs={3}> \n              <Typography variant=\"subtitle1\">\n                Protein (g): \n              </Typography>\n              <Typography variant=\"h5\">\n                {+totalProtein.toFixed(3)}\n              </Typography>\n            </Grid>\n            <Grid item xs={3}> \n              <Typography variant=\"subtitle1\">\n                Carbohydrates (g): \n              </Typography>\n              <Typography variant=\"h5\">\n                {+totalCarbs.toFixed(3)}\n              </Typography>\n            </Grid>\n            <Grid item xs={3}> \n              <Typography variant=\"subtitle1\">\n                Cholestrol (mg): \n              </Typography>\n              <Typography variant=\"h5\">\n                {+totalChole.toFixed(3)}\n              </Typography>\n            </Grid>\n            <Grid item xs={3}> \n              <Typography variant=\"subtitle1\">\n                Fats (g): \n              </Typography>\n              <Typography variant=\"h5\">\n                {+totalFats.toFixed(3)}\n              </Typography>\n            </Grid>\n            <Grid item xs={3}> \n              <Typography variant=\"subtitle1\">\n                Saturated Fats (g): \n              </Typography>\n              <Typography variant=\"h5\">\n                {+totalSaturated.toFixed(3)}\n              </Typography>\n            </Grid>\n            <Grid item xs={3}> \n              <Typography variant=\"subtitle1\">\n                Sodium (mg): \n              </Typography>\n              <Typography variant=\"h5\">\n                {+totalSodium.toFixed(3)}\n              </Typography>\n            </Grid>\n            <Grid item xs={3}> \n              <Typography variant=\"subtitle1\">\n                Fibers (g): \n              </Typography>\n              <Typography variant=\"h5\">\n                {+totalFibre.toFixed(3)}\n              </Typography>\n            </Grid>\n          </Grid>\n          </CardContent>\n      </Card>\n\n\n    \n  );\n}\n/*\nimport React from 'react';\nimport './App.css';\nimport {Grid, Tabs, Tab, AppBar, Toolbar} from '@material-ui/core'\nimport { DOMParser } from \"xmldom\"\nimport SearchBar from './components/SearchBar'\nimport NutrientTotals from './components/NutrientTotals'\nimport FoodList from './components/FoodList'\nimport AddedFoods from './components/AddedFoods'\nimport axios from 'axios'\n\n\n\nclass App extends React.Component {\n  constructor (props) {\n    super (props)\n    this.state = {\n      foods: undefined,\n      addedFoods: [],\n      //suggestedFoods: [],\n    }\n  }\n\n  searchFood = async (term) => {\n    //term = term.toString().replace(/[^a-zA-Z0-9]/g, ' ');\n    term = 'egg'\n    const key = 'OLfvWsWXPyiO99SWm2axG0tH2v1kvtyTFqDrdYeJ'\n    const url = `https://api.nal.usda.gov/fdc/v1/foods/search?api_key=${key}&query=${term}`\n\n    let result = await (axios.get(url))\n\n    let foods = result.data.foods.filter((food, i, arr)=>{\n        return (i===0)||(food.description !==arr[i-1].description)\n    })\n    console.log(foods.length)\n    console.log(foods)\n    \n    let foodIds = foods[0].fdcId\n    for (let i=1; i<5; i++){\n      foodIds+=\"%2C\"+(foods[i].fdcId)\n    }\n    \n    console.log(foodIds)\n    \n    const result2 = await (axios.get(`https://api.nal.usda.gov/fdc/v1/foods?api_key=${key}&fdcIds=${foodIds}`))\n\n    //const result2 = await (axios.get(`https://api.nal.usda.gov/fdc/v1/foods?fdcIds=534358%2C373052?api_key=${key}`))\n    console.log(result2)\n    \n    /*this.setState({\n        foods: foods,\n    })*/\n//811950\n\n    /*const url = `https://itunes.apple.com/search?term=${term}&entity=podcast`\n    const cors = 'https://cors-anywhere.herokuapp.com/'\n\n    const result = await fetch(cors+url)\n    const items = await result.json()\n    this.setState({\n      podcasts: items.results,\n      tracks: undefined\n    })*//*\n    \n  }  \n\n  setSelectedPodcast = async (podcast) => {\n    const id = podcast.trackId\n    const cors = 'https://cors-anywhere.herokuapp.com/'\n\n    const result1 = await fetch(cors+`https://itunes.apple.com/lookup?id=${id}&entity=podcast`)\n    const items1 = await result1.json()\n    const result2 = await fetch(cors+items1.results[0].feedUrl)\n    const text = await result2.text()\n\n    const podcastDocument = new DOMParser().parseFromString(\n      text,\n      \"text/xml\",\n    )\n\n    const items = podcastDocument.getElementsByTagName(\"item\")\n\n    this.setState({\n      selectedPodcast: podcast,\n      podcastDocument: podcastDocument,\n      tracks: items,\n      selectedTab: 1\n    })\n\n  }\n\n  setSelectedTrack = async (track) => {\n    this.setState({\n      selectedTrackUrl: track.getElementsByTagName(\"enclosure\")[0].getAttribute(\"url\")\n    })\n  }\n  \n  \n  handleTabChange = (event, newValue) => {\n    this.setState({\n      selectedTab: newValue\n    })\n  }\n\n  toggleSubscription = (subscribe, podcast) => {\n    let newSubs = this.state.subscriptions\n    if (subscribe) {\n      newSubs.push(podcast)\n    } else {\n      newSubs = newSubs.filter((pod)=>{\n        return (pod.collectionId !== podcast.collectionId)\n      })\n    }\n    this.setState({\n      subscriptions: newSubs\n    })\n    alert(`${(subscribe) ? \"Added\":\"Removed\"} \"${podcast.collectionName}\" ${(subscribe) ? \"to\":\"from\"} subscriptions`);\n  }\n\n  render () {\n    const {foods, addedFoods}=this.state\n    \n    return (\n            <Grid style={{ justifyContent: \"center\" }} container spacing={0}>\n                <Grid item xs={10}>\n                    <Grid item container spacing={3} style={{ justifyContent: \"center\" }}>\n                        <Grid item xs={8}style={{ marginTop: \"10px\" }}>\n                            <SearchBar onFormChange={this.searchFood}/>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <AddedFoods addedFoods={addedFoods} removeFood={this.removeFood}/>\n                        </Grid>\n                        <NutrientTotals addedFoods={addedFoods}/>\n                    </Grid>\n                </Grid>\n            </Grid>\n    );\n    \n  }\n}\n\nexport default App;*/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from \"react\";\nimport { Grid, ListItemSecondaryAction, IconButton, makeStyles, ListItem, ListItemText} from \"@material-ui/core\";\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\n\nexport default ({food, addFood, key,removeFood}) => {\n  return (\n      <>\n    <ListItem style={{width:\"30vw\"}}>\n    <ListItemText primary={food.name} secondary={`${food.calories} calories`} />\n                <ListItemSecondaryAction>\n                    <IconButton edge=\"end\" aria-label=\"delete\" onClick={()=>{removeFood(key)}}>\n                      <RemoveCircleIcon/>\n                    </IconButton>\n                  </ListItemSecondaryAction>\n              </ListItem>\n      </>\n  );\n}\n/*  <Grid item xs={12}>\n    <Card className={classes.root}>\n          <CardContent className={classes.details}>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {food.food_name}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {`${food.serving_qty} ${food.serving_unit}, ${food.nf_calories} calories`}\n              </Typography>\n          </CardContent>\n    </Card>\n  </Grid>     */","import React from \"react\";\nimport { Grid, makeStyles, List, Divider, Typography,Card, CardContent} from \"@material-ui/core\";\nimport AddedFoodItem from './AddedFoodItem';\n\nexport default ({addedFoods, removeFood}) => {\n    const useStyles = makeStyles({\n        list: {\n            width: '40vw',\n        },\n    });\n    const classes = useStyles();\n\n    \n    if (addedFoods.length<1) {\n      return (\n        <Card style={{height: \"55vh\"}}>\n          <CardContent>   \n            <Typography variant=\"h5\">\n              Your Foods\n            </Typography>\n\n          <Grid container style={{justifyContent:\"center\", marginTop: \"30px\"}} spacing={3}>\n            <Typography variant=\"subtitle1\" style={{color: \"gray\"}}>\n            You have no added foods\n            </Typography>:\n          </Grid>\n          </CardContent>\n      </Card>\n      )\n    } \n          const listOfAddedFoods = addedFoods.map((food, index) => {\n              return (\n                <>\n                      <AddedFoodItem\n                          key={index}\n                          food={food}\n                          removeFood={removeFood}\n                      />\n                      {(index===addedFoods.length-1)||<Divider/>}\n                </>\n              )\n          })\n    \n\n\t\n\n  return (\n      <Card style={{height: \"55vh\"}}>\n          <CardContent>   \n            <Typography variant=\"h5\" style={{marginBottom:\"10px\"}}>\n              Your Foods\n            </Typography>\n\n          <Grid container style={{justifyContent:\"center\", maxHeight: '100%', overflow: 'auto'}} spacing={3}>\n            <List>\n                {listOfAddedFoods}\n            </List>\n          </Grid>\n          </CardContent>\n      </Card>\n\n\n    \n  );\n}","import React from 'react';\nimport './App.css';\nimport {Grid} from '@material-ui/core'\nimport Search from './components/Search'\nimport NutrientTotals from './components/NutrientTotals'\nimport AddedFoods from './components/AddedFoods'\nimport axios from 'axios'\n\n\n\nclass App extends React.Component {\n  constructor (props) {\n    super (props)\n    this.state = {\n      food: undefined,\n      addedFoods: [],\n    }\n  }\n\n  searchFood = async (term) => {\n    //term = term.toString().replace(/[^a-zA-Z0-9]/g, ' ');\n\n    const id = \"a8ca87da\"\n    const key = \"234285a1a06cedc063e96ce6c802fb9e\"\n\n    const url2= `https://api.edamam.com/api/food-database/v2/parser?nutrition-type=logging&ingr=${term}&app_id=${id}&app_key=${key}`\n    \n    let result = await (axios.get(url2))\n    console.log(result.data)\n    let newFood = []\n    console.log(result.data)\n    if (result.data.parsed.length !== 0){\n      const res = await axios.post (`https://api.edamam.com/api/food-database/v2/nutrients?app_id=${id}&app_key=${key}`, {\n        \"ingredients\": [\n          {\n            \"quantity\": 1,\n            \"measureURI\": result.data.parsed[0].measure===undefined?'null':result.data.parsed[0].measure.uri,\n            \"foodId\": result.data.parsed[0].food.foodId\n          }\n        ]\n      })\n\n      newFood = res.data\n      newFood.name = result.data.parsed[0].food.label\n      newFood.id = result.data.parsed[0].food.foodId\n    }\n\n    this.setState({\n      food:newFood\n    })\n  }\n\n\n  addFood = (food) => {\n    let newFoods = this.state.addedFoods;\n    newFoods.push(food)\n    this.setState({\n      addedFoods:newFoods\n    })\n  } \n  removeFood = (index) => {\n    let newFoods = this.state.addedFoods;\n    newFoods.splice(index, 1)\n    this.setState({\n      addedFoods:newFoods\n    })\n  } \n\n  render () {\n    const {food, addedFoods}=this.state\n    \n    return (\n            <Grid style={{ justifyContent: \"center\" }} container spacing={0}>\n                <Grid item xs={10}>\n                    <Grid item container spacing={3} style={{ justifyContent: \"center\" }}>\n                        <Grid item xs={6}style={{ marginTop: \"10px\" }}>\n                            <Search onFormSubmit={this.searchFood} food={food} addFood={this.addFood}/>\n                        </Grid>\n                        <Grid item xs={6} style={{marginTop:\"10px\"}}>\n                            <AddedFoods addedFoods={addedFoods} removeFood={this.removeFood}/>\n                        </Grid>\n                    </Grid>\n                </Grid>\n              <div style ={{position:'fixed', bottom:'0'}}>\n                <NutrientTotals style ={{position:'fixed', bottom:'0'}} addedFoods={addedFoods}/>\n              </div>\n            </Grid>\n    );\n    \n  }\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}