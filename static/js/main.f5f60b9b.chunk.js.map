{"version":3,"sources":["components/Suggestion.js","components/FoodItem.js","components/FoodList.js","components/Search.js","components/NutrientTotals.js","components/AddedFoodItem.js","components/AddedFoods.js","App.js","index.js"],"names":["suggestion","onSuggestionClick","ListItem","style","width","onClick","ListItemText","primary","food","addFood","classes","makeStyles","details","icon","color","useStyles","Grid","item","xs","Card","display","justifyContent","alignItems","CardContent","className","Typography","gutterBottom","variant","component","name","calories","IconButton","aria-label","typing","searchTerm","role","undefined","length","container","maxWidth","spacing","FoodItem","key","id","SearchBarWrapper","props","handleChange","newValue","setState","state","autocompleteFood","handleSubmit","onFormSubmit","term","a","axios","get","then","res","suggestions","data","catch","err","console","log","toString","replace","this","options","map","index","Suggestion","Divider","value","onChange","onRequestSearch","onCancelSearch","List","FoodList","React","Component","addedFoods","totalCal","totalProtein","totalCarbs","totalFats","totalSaturated","totalChole","totalSodium","totalFibre","reduce","totalNutrients","PROCNT","quantity","CHOCDF","FAT","FASAT","CHOLE","NA","FIBTG","backgroundColor","noWrap","toFixed","removeFood","secondary","ListItemSecondaryAction","edge","height","marginTop","listOfAddedFoods","AddedFoodItem","marginBottom","maxHeight","overflow","App","searchFood","url","result","newFood","parsed","post","measure","uri","foodId","label","newFoods","push","splice","Search","AddedFoods","position","bottom","NutrientTotals","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.f5f60b9b.chunk.js","sourcesContent":["import React from 'react';\nimport { ListItem, ListItemText} from '@material-ui/core';\n\nexport default ({ suggestion, onSuggestionClick }) => {\n\n\treturn (\n\t\t<ListItem style={{width:\"30vw\"}} onClick={()=>onSuggestionClick(suggestion)}>\n\t\t\t<ListItemText primary={suggestion}/>\n\t\t</ListItem>\n\t);\n};\n","import React from \"react\";\nimport { Grid, IconButton, makeStyles, Typography,Card, CardMedia, CardActionArea, CardContent} from \"@material-ui/core\";\nimport AddCircleSharp from '@material-ui/icons/AddCircleSharp';\n\nexport default ({food, addFood}) => {\n  const useStyles = makeStyles({\n    details: {\n      width: \"50%\"\n    },\n    icon: {\n      color: \"green\",\n    },\n  });\n  const classes = useStyles();\n\n  return (\n    <Grid item xs={12}>\n    <Card style={{display:\"flex\", justifyContent:\"space-between\", alignItems: \"center\"}}>\n          <CardContent className={classes.details}>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {food.name}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {` ${food.calories} calories`}\n              </Typography>\n          </CardContent>\n          <IconButton aria-label=\"delete\" onClick={()=>{addFood(food)}}>\n            <AddCircleSharp className={classes.icon}/>\n          </IconButton>     \n    </Card>\n  </Grid>\n  );\n}","import React from 'react';\nimport { Grid, Typography} from '@material-ui/core';\n\nimport FoodItem from './FoodItem';\n\nexport default ({ food, typing, addFood, searchTerm }) => {\n\n\tif (searchTerm === '') {\n\t\treturn (\n            <Typography variant=\"subtitle1\">\n\t\t\t\t<span role=\"img\">👆</span> Type out a food item to add! \n\t\t\t</Typography>\n\t\t);\n\t}\n\telse if (food === undefined || typing){\n\t\treturn null\n\t}\n\telse if (food.length < 1) {\n\t\treturn (\n            <Typography variant=\"subtitle1\">\n\t\t\t\tCouldn't find a food item with that name\n\t\t\t</Typography>\n\t\t);\n    }\n\n\treturn (\n\t\t<Grid item container \n\t\t\tstyle={{justifyContent:'center',maxWidth:\"750px\"}}\n\t\t\tspacing={1}\n\t\t>\n\t\t\t\t<FoodItem\n                addFood={addFood}\n                key={food.id}\n                food={food}\n            />\n\t\t\t\n\t\t</Grid>\n\t\n\t);\n};\n","import React from 'react'\nimport SearchBar from \"material-ui-search-bar\";\nimport {Divider, List} from '@material-ui/core';\nimport Suggestion from './Suggestion';\nimport FoodList from './FoodList'\nimport axios from 'axios'\n\nclass SearchBarWrapper extends React.Component {\n    constructor (props){\n        super(props)\n        this.state = {\n            searchTerm: '',\n            suggestions: [], \n            typing: false\n        }\n    }\n\n    handleChange = (newValue) => {\n        this.setState({\n            searchTerm: newValue,\n            typing: this.state.searchTerm!==''\n        })\n        \n        this.autocompleteFood (newValue)\n    }\n\n    handleSubmit = () => {\n        const {searchTerm} = this.state\n        const {onFormSubmit} = this.props\n        this.setState ({\n            typing: false\n          })\n        onFormSubmit (searchTerm)\n    }\n\n    autocompleteFood = async (term) => {\n        if (term.length>0){\n          const id = \"a8ca87da\"\n          const key = \"234285a1a06cedc063e96ce6c802fb9e\"\n          axios.get(`https://api.edamam.com/auto-complete?q=${term}&limit=5&app_id=${id}&app_key=${key}`)\n            .then(res=>{\n                this.setState ({\n                    suggestions: res.data\n                    })\n            })\n            .catch(err=>{\n                console.log('autocorrect error')\n            })\n        }\n      }\n\n    onSuggestionClick = (newValue) => {\n        newValue= newValue.toString().replace(/[^a-zA-Z0-9]/g, ' ');\n        this.setState({\n            searchTerm: newValue,\n            suggestions: []\n        })\n        const {onFormSubmit} = this.props\n        this.setState ({\n            typing: false\n        })\n        onFormSubmit (newValue)\n    }    \n\n    render () {\n        const {suggestions, searchTerm, typing} = this.state\n        const {food, addFood} = this.props\n\n        const options = typing?suggestions.map((suggestion, index) => {\n            return (\n              <>\n                    <Suggestion\n                        suggestion={suggestion}\n                        onSuggestionClick={this.onSuggestionClick}\n                    />\n                    {(index!==suggestions.length-1)&&<Divider/>}\n              </>\n            )\n        }):null\n        return (\n            <>\n            <SearchBar\n                value={this.state.searchTerm}\n                onChange={this.handleChange}\n                onRequestSearch={this.handleSubmit}\n                onCancelSearch={()=>{\n                    this.setState({\n                        searchTerm: ''\n                    })\n                }}\n            />\n            <List>\n                {options}\n            </List>\n            <FoodList food={food} addFood={addFood} typing={typing} searchTerm={searchTerm}/>\n            </>\n            \n            )\n        }\n    }\n    \n    export default SearchBarWrapper\n    ","import React from \"react\";\nimport { Grid, Typography,Card, CardContent} from \"@material-ui/core\";\n\nexport default ({addedFoods}) => {\n  let totalCal = 0\n  let totalProtein = 0\n  let totalCarbs = 0\n  let totalFats = 0\n  let totalSaturated = 0\n  let totalChole = 0\n  let totalSodium = 0\n  let totalFibre = 0\n\n  if (addedFoods.length >= 1){\n    totalCal=addedFoods.reduce((totalCal, food)=>{ return totalCal + food.calories},0)\n    totalProtein=addedFoods.reduce((totalProtein, food)=>{return totalProtein + (('PROCNT' in food.totalNutrients)?food.totalNutrients.PROCNT.quantity:0)},0)  \n    totalCarbs=addedFoods.reduce((totalCarbs, food)=>{return totalCarbs + (('CHOCDF' in food.totalNutrients)?food.totalNutrients.CHOCDF.quantity:0)},0)\n    totalFats=addedFoods.reduce((totalFats, food)=>{return totalFats + (('FAT' in food.totalNutrients)?food.totalNutrients.FAT.quantity:0)},0)\n    totalSaturated=addedFoods.reduce((totalSaturated, food)=>{return totalSaturated + (('FASAT' in food.totalNutrients)?food.totalNutrients.FASAT.quantity:0)},0)\n    totalChole=addedFoods.reduce((totalChole, food)=>{return totalChole + (('CHOLE' in food.totalNutrients)?food.totalNutrients.CHOLE.quantity:0)},0)\n    totalSodium=addedFoods.reduce((totalSodium, food)=>{return totalSodium + (('NA' in food.totalNutrients)?food.totalNutrients.NA.quantity:0)},0)\n    totalFibre=addedFoods.reduce((totalFibre, food)=>{return totalFibre + (('FIBTG' in food.totalNutrients)?food.totalNutrients.FIBTG.quantity:0)},0)\n  }\n\n  return (\n      <Card style={{backgroundColor: \"#DEFDE0\"}}>\n          <CardContent>   \n            <Typography variant=\"subtitle1\" noWrap>\n              Totals\n            </Typography>\n\n          <Grid container style={{justifyContent:\"left\"}} spacing={1}>\n            <Grid item xs={3}> \n              <Typography variant=\"subtitle2\">\n                Calories: \n              </Typography>\n              <Typography variant=\"subtitle1\">\n                {+totalCal.toFixed(3)}\n              </Typography>\n            </Grid>\n            <Grid item xs={3}> \n              <Typography variant=\"subtitle2\">\n                Protein (g): \n              </Typography>\n              <Typography variant=\"subtitle1\">\n                {+totalProtein.toFixed(3)}\n              </Typography>\n            </Grid>\n            <Grid item xs={3}> \n              <Typography variant=\"subtitle2\">\n                Carbohydrates (g): \n              </Typography>\n              <Typography variant=\"subtitle1\">\n                {+totalCarbs.toFixed(3)}\n              </Typography>\n            </Grid>\n            <Grid item xs={3}> \n              <Typography variant=\"subtitle2\">\n                Cholestrol (mg): \n              </Typography>\n              <Typography variant=\"subtitle1\">\n                {+totalChole.toFixed(3)}\n              </Typography>\n            </Grid>\n            <Grid item xs={3}> \n              <Typography variant=\"subtitle2\">\n                Fats (g): \n              </Typography>\n              <Typography variant=\"subtitle1\">\n                {+totalFats.toFixed(3)}\n              </Typography>\n            </Grid>\n            <Grid item xs={3}> \n              <Typography variant=\"subtitle2\">\n                Saturated Fats (g): \n              </Typography>\n              <Typography variant=\"subtitle1\">\n                {+totalSaturated.toFixed(3)}\n              </Typography>\n            </Grid>\n            <Grid item xs={3}> \n              <Typography variant=\"subtitle2\">\n                Sodium (mg): \n              </Typography>\n              <Typography variant=\"subtitle1\">\n                {+totalSodium.toFixed(3)}\n              </Typography>\n            </Grid>\n            <Grid item xs={3}> \n              <Typography variant=\"subtitle2\">\n                Fibers (g): \n              </Typography>\n              <Typography variant=\"subtitle1\">\n                {+totalFibre.toFixed(3)}\n              </Typography>\n            </Grid>\n          </Grid>\n          </CardContent>\n      </Card>\n    \n  );\n}","import React from \"react\";\nimport {ListItemSecondaryAction, IconButton, makeStyles, ListItem, ListItemText} from \"@material-ui/core\";\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\n\nexport default ({food, addFood, key,removeFood}) => {\n  return (\n      <>\n    <ListItem style={{width:\"30vw\"}}>\n    <ListItemText primary={food.name} secondary={`${food.calories} calories`} />\n                <ListItemSecondaryAction>\n                    <IconButton edge=\"end\" aria-label=\"delete\" onClick={()=>{removeFood(key)}}>\n                      <RemoveCircleIcon style={{color:\"red\"}}/>\n                    </IconButton>\n                  </ListItemSecondaryAction>\n              </ListItem>\n      </>\n  );\n}","import React from \"react\";\nimport { Grid, List, Divider, Typography,Card, CardContent} from \"@material-ui/core\";\nimport AddedFoodItem from './AddedFoodItem';\n\nexport default ({addedFoods, removeFood}) => {    \n    if (addedFoods.length<1) {\n      return (\n        <Card style={{height: '60vh'}}>\n          <CardContent>   \n            <Typography variant=\"h6\">\n              Your Foods\n            </Typography>\n\n          <Grid container style={{justifyContent:\"center\", marginTop: \"30px\"}} spacing={3}>\n            <Typography variant=\"subtitle1\" style={{color: \"gray\"}}>\n            You have no added foods\n            </Typography>:\n          </Grid>\n          </CardContent>\n      </Card>\n      )\n    } \n          const listOfAddedFoods = addedFoods.map((food, index) => {\n              return (\n                <>\n                      <AddedFoodItem\n                          key={index}\n                          food={food}\n                          removeFood={removeFood}\n                      />\n                      {(index===addedFoods.length-1)||<Divider/>}\n                </>\n              )\n          })\n\n  return (\n      <Card style={{height: \"60vh\"}}>\n          <CardContent>   \n            <Typography variant=\"h6\" style={{marginBottom:\"10px\"}}>\n              Your Foods\n            </Typography>\n\n          <Grid container style={{justifyContent:\"center\", maxHeight: '50vh', overflow: 'auto'}} spacing={3}>\n            <List>\n                {listOfAddedFoods}\n            </List>\n          </Grid>\n          </CardContent>\n      </Card>\n\n\n    \n  );\n}","import React from 'react';\nimport './App.css';\nimport {Grid} from '@material-ui/core'\nimport Search from './components/Search'\nimport NutrientTotals from './components/NutrientTotals'\nimport AddedFoods from './components/AddedFoods'\nimport axios from 'axios'\n\nclass App extends React.Component {\n  constructor (props) {\n    super (props)\n    this.state = {\n      food: undefined,\n      addedFoods: [],\n    }\n  }\n\n  searchFood = async (term) => {\n    const id = \"a8ca87da\"\n    const key = \"234285a1a06cedc063e96ce6c802fb9e\"\n    const url= `https://api.edamam.com/api/food-database/v2/parser?nutrition-type=logging&ingr=${term}&app_id=${id}&app_key=${key}`\n    \n    let result = await (axios.get(url))\n    console.log(result.data)\n    let newFood = []\n    console.log(result.data)\n    if (result.data.parsed.length !== 0){\n      const res = await axios.post (`https://api.edamam.com/api/food-database/v2/nutrients?app_id=${id}&app_key=${key}`, {\n        \"ingredients\": [\n          {\n            \"quantity\": 1,\n            \"measureURI\": result.data.parsed[0].measure===undefined?'null':result.data.parsed[0].measure.uri,\n            \"foodId\": result.data.parsed[0].food.foodId\n          }\n        ]\n      })\n\n      newFood = res.data\n      newFood.name = result.data.parsed[0].food.label\n      newFood.id = result.data.parsed[0].food.foodId\n    }\n\n    this.setState({\n      food:newFood\n    })\n  }\n\n\n  addFood = (food) => {\n    let newFoods = this.state.addedFoods;\n    newFoods.push(food)\n    this.setState({\n      addedFoods:newFoods\n    })\n  } \n  removeFood = (index) => {\n    let newFoods = this.state.addedFoods;\n    newFoods.splice(index, 1)\n    this.setState({\n      addedFoods:newFoods\n    })\n  } \n\n  render () {\n    const {food, addedFoods}=this.state\n    \n    return (\n            <Grid style={{ justifyContent: \"center\" }} container spacing={0}>\n                <Grid item xs={10}>\n                    <Grid item container spacing={3} style={{ justifyContent: \"center\" }}>\n                        <Grid item xs={4}style={{ marginTop: \"10px\" }}>\n                            <Search onFormSubmit={this.searchFood} food={food} addFood={this.addFood}/>\n                        </Grid>\n                        <Grid item xs={8} style={{marginTop:\"10px\"}}>\n                            <AddedFoods addedFoods={addedFoods} removeFood={this.removeFood}/>\n                        </Grid>\n                    </Grid>\n                </Grid>\n              <div style ={{position:'fixed', bottom:'0'}}>\n                <NutrientTotals style ={{position:'fixed', bottom:'0'}} addedFoods={addedFoods}/>\n              </div>\n            </Grid>\n    );\n    \n  }\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}